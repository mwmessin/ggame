// Generated by CoffeeScript 1.3.1
(function() {
  var __slice = [].slice;

  this.extend = function() {
    var extension, extensions, k, object, v, _i, _len;
    object = arguments[0], extensions = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    for (_i = 0, _len = extensions.length; _i < _len; _i++) {
      extension = extensions[_i];
      for (k in extension) {
        v = extension[k];
        object[k] = v;
      }
    }
    return object;
  };

  this.union = function() {
    var objects;
    objects = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return extend.apply(null, [{}].concat(__slice.call(objects)));
  };

  extend(Number, {
    E: 2.718281828459045,
    LN2: 0.6931471805599453,
    LN10: 2.302585092994046,
    LOG2E: 1.4426950408889634,
    LOG10E: 0.4342944819032518,
    HALFSQRT2: 0.7071067811865476,
    SQRT2: 1.4142135623730951,
    TAU: 6.283185307179586
  });

  Math.chance = function(what, many) {
    return Math.ceil(Math.random() * many) <= what;
  };

  Array.prototype.last = function() {
    return this[this.length - 1];
  };

  Array.prototype.pack = function() {
    var n, results, _i, _len;
    results = [];
    for (_i = 0, _len = this.length; _i < _len; _i++) {
      n = this[_i];
      if (!!n) {
        results.push(n);
      }
    }
    return results;
  };

  String.prototype.times = function(n) {
    var r;
    r = '';
    while (n--) {
      r += this;
    }
    return r;
  };

  String.prototype.splice = function(index, replace, what) {
    return this.substr(0, index) + what + this.substr(index + replace);
  };

  String.prototype.pretty = function() {
    var depth, full, index, match, regexp, result, value;
    regexp = /({|}|\[|\]|;|:|,)/g;
    result = this;
    depth = 0;
    match = void 0;
    while (match = regexp.exec(result)) {
      index = match.index;
      full = match[0];
      value = match[1];
      if (/\]|}/.test(value)) {
        value = "\n" + " ".times(--depth * 4) + value;
      } else if (/\[|{/.test(value)) {
        value += "\n" + " ".times(++depth * 4);
      } else if (value === ":") {
        value += " ";
      } else {
        if (value === ",") {
          value += "\n" + " ".times(depth * 4);
        }
      }
      result = result.splice(index, full.length, value);
      regexp.lastIndex += value.length - full.length;
    }
    return result;
  };

  this.Frame = this.requestAnimationFrame || this.webkitRequestAnimationFrame || this.mozRequestAnimationFrame || this.oRequestAnimationFrame || this.msRequestAnimationFrame || function(f) {
    return setTimeout(f, 20);
  };

  this.Time = Date.now;

}).call(this);
